#VALIDATION-RULESET-TIMESTAMP 20151201
#VALIDATION-RULESET-AUTHOR Chris Berry

#SUBSET GEN_validate_soapEnvelope
#SUBSET GEN_validate_DistributionEnvelope
#SUBSET profile_interaction_validation
#SUBSET CDA_render_templatelist_display
#SUBSET GEN_SimpleOKResponse
#SUBSET GEN_transforms
#SUBSET dateTimeValidator

INCLUDE /home/riro/TKW-5.0.5/TKW/contrib/Common/cda/GenericCDA.conf

INCLUDE /home/riro/TKW-5.0.5/TKW/contrib/Common/validator_packs/fault/faultresponse_validator.conf

SUBSET GEN_validate_soapEnvelope
IF xpathexists /soap:Envelope
THEN
SET literal $CHECKPOINT VALIDATING SOAP ENVELOPE - GENERIC
												#####	WS Addressing Validation	#####



# wsa:MessageID Validation
#######################################################################################################################################################################################################

CHECK xpathexists /soap:Envelope/soap:Header/wsa:MessageID
ANNOTATION "Test: MessageID is present"

	IF xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
	THEN
		CHECK xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
		ANNOTATION "Test: MessageID follows the rule - 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively. And contains some prefix, which is specific to the framework used for development."
	ELSE
		IF xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
		THEN
			CHECK xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
			ANNOTATION "Test: MessageID = __MESSAGEID__ an unsubstituted example file has been validated"
		ELSE
			IF xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
			THEN
			CHECK xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
			ANNOTATION "Test: MessageID is correct format - NOTE: LOWER CASE HEX VALUES HAVE BEEN USED - UPPER CASE (WITHOUT PREFIX)IS RECOMMENDED. WS-ADR-01)"
			ELSE
				IF xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
				THEN
				CHECK xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
				ANNOTATION "Test: MessageID = __MESSAGEID__ an unsubstituted example file has been validated"
				ELSE
				CHECK xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
				ANNOTATION "Test: MessageID MUST be: 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively with a prefix, which is specific to the development framework NOTE: LOWER CASE HEX VALUES HAVE BEEN USED - UPPER CASE (WITHOUT PREFIX)IS RECOMMENDED. WS-ADR-01)"
				ENDIF
			ENDIF
		ENDIF
	ENDIF

# wsa:Action Validation
#######################################################################################################################################################################################################
	IF xpathexists /soap:Envelope/soap:Header/wsa:Action
	THEN
		CHECK xpathequals /soap:Envelope/soap:Header/wsa:Action $ACTION
		ANNOTATION "Test: Action is appropriate for validation ruleset being executed"
		CHECK xpathexists /soap:Envelope/soap:Body/itk:DistributionEnvelope/itk:header[@service=/soap:Envelope/soap:Header/wsa:Action]/@service
		ANNOTATION "Test: Action matches the service in the service in the distribution envelope"
	ELSE
		CHECK xpathexists /soap:Envelope/soap:Header/wsa:Action
		ANNOTATION "Test: Action is present"
	ENDIF

# wsa:To Validation
#######################################################################################################################################################################################################

	IF xpathequals /soap:Envelope/soap:Body/itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri urn:nhs-uk:identity:cfh:nic:lab:itk-demonstrator
	THEN
		CHECK xpathequals /soap:Envelope/soap:Body/itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri urn:nhs-uk:identity:cfh:nic:lab:itk-demonstrator
		ANNOTATION "Test: auditIdentity is urn:nhs-uk:identity:cfh:nic:lab:itk-demonstrator therefore wsa:To is not required"
	ELSE
		CHECK xpathexists /soap:Envelope/soap:Header/wsa:To
		ANNOTATION "Test: To address is present"
	ENDIF

# wsa:From Validation
#######################################################################################################################################################################################################

	IF xpathexists /soap:Envelope/soap:Header/wsa:From
	THEN
		CHECK xpathexists /soap:Envelope/soap:Header/wsa:From
		ANNOTATION "Test: From address is present"
	ENDIF

	#Check that reference parameters have not been used
	IF xpathexists /soap:Envelope/soap:Header/wsa:From/wsa:ReferenceProperties
	THEN
		CHECK xpathnotexists /soap:Envelope/soap:Header/wsa:From/wsa:ReferenceProperties
		ANNOTATION "Reference Parameters are not allowed WS-ADR-08"
	ENDIF


# wsa:ReplyTo Validation
#######################################################################################################################################################################################################

#PATTERN 1 LIST
	IF xpathmatches /soap:Envelope/soap:Header/wsa:Action urn:nhs-itk:services:201005:(transferPatientUpdateMaster(PH)?|registerOutpatientUpdateMaster(PH)?|dischargePatientUpdateMaster(PH)?|cancelDischargePatientUpdateMaster(PH)?|transferPatientUpdateMaster(PH)?|cancelTransferPatientUpdateMaster(PH)?|queryPatientDemographicsAndVisit(PH)?|queryPatientDemographics(PH)?|findCandidatesQuery(PH)?|updatePatientUpdateMaster(PH)?)-v1-0
	THEN
		#IF ReplyTo FOUND MAY BE AN ASYNC MESSAGE SO MAY BE PRESENT AND COULD BE SET TO ANYTHING
		#Is replyto present? 
		IF xpathexists /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address
		THEN
			#Yes it's there - and set to anonymous
			IF xpathequals /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address http://www.w3.org/2005/08/addressing/anonymous
			THEN
				CHECK xpathequals /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address http://www.w3.org/2005/08/addressing/anonymous
				ANNOTATION "Test: PATTERN 1 Message - MAY BE SYNC OR ASYNC: ReplyTo present and set to http://www.w3.org/2005/08/addressing/anonymous"
			ELSE
				#Yes it's there - and set to something else (i.e. not blank)
				CHECK xpathnotequals /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address ""
				ANNOTATION "Test: PATTERN 1 Message - MAY BE SYNC OR ASYNC: ReplyTo IS present in validated message and is not anonymous or empty"
			ENDIF
		ELSE
			#It is not there
			CHECK xpathnotexists /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address
			ANNOTATION "Test: PATTERN 1 Message - MAY BE SYNC OR ASYNC: ReplyTo IS NOT present in validated message"
		ENDIF
	ELSE
		##IF ReplyTo FOUND HERE MUST BE IN A SYNC MESSAGE SO MUST BE SET TO ANONYMOUS
		IF xpathexists /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address
		THEN
			CHECK xpathequals /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address http://www.w3.org/2005/08/addressing/anonymous
			ANNOTATION "PATTERN 2 Message - SYNC ONLY: ReplyTo IS present in validated message so MUST be anonymous"
		ELSE
			CHECK xpathnotexists /soap:Envelope/soap:Header/wsa:ReplyTo/wsa:Address
			ANNOTATION "PATTERN 2 Message - SYNC ONLY: ReplyTo IS NOT present in validated message"
		ENDIF
	ENDIF

# wsa:FaultTo Validation
#######################################################################################################################################################################################################

	IF xpathexists /soap:Envelope/soap:Header/wsa:FaultTo/wsa:Address
	THEN
		CHECK xpathexists /soap:Envelope/soap:Header/wsa:FaultTo/wsa:Address
		ANNOTATION "Test: A FaultTo has been supplied - this is optional"
	ENDIF

#####	WS Security Validation	#####

# wsu:Id Validation
#######################################################################################################################################################################################################

	IF xpathexists /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/@wsu:Id
	THEN
		IF xpathmatches /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/@wsu:Id [a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
		THEN
			CHECK xpathmatches /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/@wsu:Id [a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
			ANNOTATION "Test: wsu:ID follows the rule - 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively. And contains some prefix, which is specific to the framework used for development."
		ELSE
			CHECK xpathmatches /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/@wsu:Id [a-zA-Z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
			ANNOTATION "Test: wsu:ID MUST be: 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively with a prefix, which is specific to the development framework NOTE: LOWER CASE HEX VALUES HAVE BEEN USED - UPPER CASE (WITHOUT PREFIX)IS RECOMMENDED. WS-ADR-01)"
		ENDIF
	ENDIF

# wsu:Created Validation
#######################################################################################################################################################################################################

CHECK xpathexists /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Created
ANNOTATION "Test: Created Timestamp is present"

	IF xpathequals /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Created __TIMESTAMP__
	THEN
		CHECK xpathequals /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Created __TIMESTAMP__
		ANNOTATION "Created = TIMESTAMP an unsubstituted example file has been validated" 
	ELSE
		SET literal $dateTime /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Created
		CHECK sub dateTimeValidator
	ENDIF

# wsu:Expires Validation
#######################################################################################################################################################################################################

CHECK xpathexists /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Expires
	IF xpathequals /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Expires __EXPIRES__
	THEN
		CHECK xpathequals /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Expires __EXPIRES__
		ANNOTATION "Expires = EXPIRES an unsubstituted example file has been validated"
	ELSE
		SET literal $dateTime /soap:Envelope/soap:Header/wsse:Security/wsu:Timestamp/wsu:Expires
		CHECK sub dateTimeValidator
	ENDIF

# wsu:Username Validation
#######################################################################################################################################################################################################

CHECK xpathexists /soap:Envelope/soap:Header/wsse:Security/wsse:UsernameToken/wsse:Username
ANNOTATION "Test: Username is present"

# wsse:Signature Validation
#######################################################################################################################################################################################################

# WS:Security Signature is Optional
	IF xpathexists /soap:Envelope/soap:Header/wsse:Security/ds:Signature/ds:SignatureValue
	THEN
		CHECK signature
		#Internal method, annotation not required
	ENDIF



# SOAP ENVELOPE CROSSCHECKS
#######################################################################################################################################################################################################

CHECK xslt /home/riro/TKW-5.0.5/TKW/contrib/Common/xslt/crosscheck_id.xslt ERROR
ANNOTATION "Test: Message, TimeStamp, Manifest and Tracking ID's are unique and that ManifestID=PayloadID"
ELSE
SET literal $CHECKPOINT SOAP ENVELOPE NOT PRESENT
ENDIF
#######################################################################################################################################################################################################
#######################################################################################################################################################################################################
#######################################################################################################################################################################################################

												#####	DistributionEnvelope Validation	#####

SUBSET GEN_validate_DistributionEnvelope

IF xpathexists //itk:DistributionEnvelope
THEN
SET literal $CHECKPOINT VALIDATING DISTRIBUTION ENVELOPE - GENERIC

# SCHEMA Validation
#######################################################################################################################################################################################################
IF xpathequals //itk:DistributionEnvelope/itk:header/@trackingid __INTERNAL_TRACKING_ID__
THEN
CHECK xpathexists //itk:DistributionEnvelope/itk:header/@trackingid
ANNOTATION "An unsubstituted example file has been validated with tags that would cause DE schema failure, schema check skipped"
ELSE
CHECK schema /home/riro/TKW-5.0.5/TKW/contrib/DMS_Schema/ITK_Core/Schemas/distributionEnvelope-v2-0.xsd
ENDIF
# trackingid Validation
#######################################################################################################################################################################################################

#<itk:DistributionEnvelope xmlns:itk="urn:nhs-itk:ns:201005" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:hl7v2="urn:hl7-org:v2xml">
#  <itk:header service="urn:nhs-itk:services:201005:SendCDADocument-v2-0" trackingid="20E444BF-8FEE-40B1-E050-950AE0737B01">

IF xpathequals //itk:DistributionEnvelope/itk:header/@trackingid __INTERNAL_TRACKING_ID__
THEN
	CHECK xpathequals //itk:DistributionEnvelope/itk:header/@trackingid __INTERNAL_TRACKING_ID__
	ANNOTATION "trackingid = __INTERNAL_TRACKING_ID__ an unsubstituted example file has been validated"
ELSE
	CHECK xpathexists //itk:DistributionEnvelope/itk:header/@trackingid
	ANNOTATION "Test: trackingid is present"
	CHECK xpathmatches //itk:DistributionEnvelope/itk:header/@trackingid [A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
	ANNOTATION "Test: trackingid follows the rule - 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively. And contains some prefix, which is specific to the framework used for development."
ENDIF

# addresslist Validation
#######################################################################################################################################################################################################

#    <itk:addresslist>
#     <itk:address uri="urn:nhs-uk:addressing:ods:A21176"/>
#    </itk:addresslist>

# auditidentity Validation
#######################################################################################################################################################################################################

#If the auditIdentity uri is present
IF xpathexists //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri
THEN
	#Confirm the uri is present in the validation report
	CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri
	ANNOTATION "Test: COR-DEH-03 For services using the Distribution Envelope and requiring an Audit Identity then Service Clients MUST populate the Audit Identity of the originating user"
	#If the uri is not an empty string
	IF xpathnotequals string-length(//itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri) 0
	THEN
		#Generic check for both toolkit and non toolkit - checking it is a well formed uri (c.f. https://tools.ietf.org/html/rfc3986#appendix-B)
		CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
		ANNOTATION "Test: COR-DEH-04.1 auditIdentity uri is well formed"
	#If a Toolkit URI has been used
		IF xpathmatches //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri ^urn:nhs-uk:identity:.*
		THEN
			#Confirm a toolkit URI has been used
			CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri ^urn:nhs-uk:identity:.*
			ANNOTATION "Test: COR-DEH-04.2 The following prefix MUST be used to indicate a Toolkit urn:nhs-uk:identity:"
			
			#Confirm the remainder of the toolkit URI consists of colon delimited tokens
			CHECK xpathmatches substring-after(//itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri,'urn:nhs-uk:identity:') ^((([^:])+:)+)([^:])+$
			ANNOTATION "Test: COR-DEH-04.3 For a Toolkit identity: The remainder of the address MUST consist of an arbitrarily-long sequence of colon-delimited tokens"
			
			#Confirm the first token identifies a HSCIC approved naming authority.
			#CHECK xpathin tokenize(substring-after(//itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri,'urn:nhs-uk:identity:'),':')[1] ods
			#ANNOTATION "Test: COR-DEH-04.4 For a Toolkit identity: The first token MUST identify a HSCIC approved naming authority. (Currently ods is supported)"
			
			#Confirm the second token exists (this identifies a HSCIC approved naming authority).
			CHECK xpathexists tokenize(substring-after(//itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri,'urn:nhs-uk:identity:'),':')[2]
			ANNOTATION "Test: COR-DEH-04.5 For a Toolkit identity: The second token MUST be a unique organisation identifier, allocated by that naming authority. (Existence of second token confirmed)"
			
			#for a toolkit uri the @type is optional, if present must be set to default oid
			IF xpathexists //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type
			THEN
				CHECK xpathequals //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type 2.16.840.1.113883.2.1.3.2.4.18.27
				ANNOTATION "Test: COR-DEH-04.7 If the address is a Toolkit address and a @type is present then the default OID must be used"
			ENDIF
		ELSE
			#A non-toolkit URI has been used
			IF xpathnotmatches //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri ^urn:nhs-uk:identity:.*
			THEN
				#Report that this does not satisfy COR-DEH-04 - report this as a failure
				CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri ^urn:nhs-uk:identity:.*
				ANNOTATION "*** NON COMPLIANCE WITH 'SHOULD' REQUIREMENT COR-DEH-04 *** <br/> PLEASE CONFIRM SPREADSHEET STATEMENT FOR THIS REQUIREMENT PRIOR TO ACCREDITATION <br/> Test: COR-DEH-04 Distribution Envelope Header 'auditIdentity/id' element SHOULD contain a Toolkit identity URI"
				#@for a non toolkit uri the type is mandatory
				CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type
				ANNOTATION "Test: COR-DEH-04.7 If the address is a non-Toolkit address then the 'type' attribute MUST be populated with an OID to indicate the address type."
				#If @type is present and not empty
				IF xpathnotequals string-length(//itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type) 0
				THEN
				#If the type is not the default oid
					IF xpathnotequals //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type 2.16.840.1.113883.2.1.3.2.4.18.27
					THEN
						#confirm that the default OID has not been used
						CHECK xpathnotequals //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type 2.16.840.1.113883.2.1.3.2.4.18.27
						ANNOTATION "Test: COR-DEH-04.7 If the address is a non-Toolkit address then the default OID must not be used as the 'type' attribute"
						#Check the type is a well formed oid
						CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type ^[\d+\.]+\d+$
						ANNOTATION "Test: COR-DEH-04.1 auditIdentity type OID is well formed"
						#------
					ELSE
						#@type must not be the default oid
						CHECK xpathnotequals //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type 2.16.840.1.113883.2.1.3.2.4.18.27
						ANNOTATION "Test: COR-DEH-04.7 If the address is a non-Toolkit address then the default OID must not be used as the 'type' attribute"
					ENDIF
				ELSE
					CHECK xpathnotequals string-length(//itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@type) 0
					ANNOTATION "Test: COR-DEH-04 auditIdentity type attribute is present but does not contain a value"
				ENDIF
			ENDIF
		ENDIF
	ELSE
		#The uri is present but an empty string
		CHECK xpathnotequals string-length(/soap:Envelope/soap:Body/itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri) 0
		ANNOTATION "Test: COR-DEH-04 auditIdentity uri attribute is present but does not contain a value"
	ENDIF
ELSE
	#The uri is not present
	CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:auditIdentity/itk:id/@uri
	ANNOTATION "Test: COR-DEH-03 For services using the Distribution Envelope and requiring an Audit Identity then Service Clients MUST populate the Audit Identity of the originating user"
ENDIF

# manifest Validation
#######################################################################################################################################################################################################

#   <itk:manifest count="1">
#      <itk:manifestitem mimetype="text/xml" id="uuid_20E42A5F-8E9C-21AE-E050-950AE0737925" profileid="urn:nhs-en:profile:ambulanceServicePatientReport-v1-0"/>
#    </itk:manifest>

#Do mimetype checks unless Send or Broadcast
IF xpathin //itk:DistributionEnvelope/itk:header/@service "urn:nhs-itk:services:201005:BroadcastDocument-v1-0" "urn:nhs-itk:services:201005:SendDocument-v1-0"
THEN
ELSE
#Check if PH service in which case mime type should be text/plain
	IF xpathmatches //itk:DistributionEnvelope/itk:header/@service urn:nhs-itk:services:201005:.*PH-v[0-9|-]+
	THEN
		CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:manifest/itk:manifestitem/@mimetype (?i)^text\/plain$
	ELSE
		CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:manifest/itk:manifestitem/@mimetype (?i)^text\/xml$
	ENDIF
ENDIF

CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:manifest[@count=count(./itk:manifestitem)]/@count
ANNOTATION "Test: Manifest count matches number of manifestitems"
CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:manifest/itk:manifestitem/@id ^[a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
ANNOTATION "Test: ManifestitemID follows the rule - 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively. And contains some prefix, which is specific to the framework used for development."
CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:manifest/itk:manifestitem[@id=//itk:DistributionEnvelope/itk:payloads/itk:payload/@id]/@mimetype
ANNOTATION "Test: Manifestitem id attribute matched the Payload id attribute"

# senderAddress Validation
#######################################################################################################################################################################################################

IF xpathexists //itk:DistributionEnvelope/itk:header/itk:senderAddress/@uri
THEN
	CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:senderAddress/@uri
	ANNOTATION "Test: Optional senderAddress is present"
	CHECK xpathmatches //itk:DistributionEnvelope/itk:header/itk:senderAddress/@uri ^urn:nhs-uk:addressing:[a-zA-Z_:0-9]{1,}
	ANNOTATION "Test: Optional senderAddress is present and the URI used matches the validation regex"
ELSE
	CHECK xpathnotexists //itk:DistributionEnvelope/itk:header/itk:senderAddress/@uri
	ANNOTATION "Test: Optional senderAddress is NOT present"
ENDIF

# handlingSpecification Validation
#######################################################################################################################################################################################################

IF xpathexists //itk:DistributionEnvelope/itk:header/itk:handlingSpecification/*[@key='urn:nhs-itk:ns:201005:interaction']/@key
THEN
	IF xpathnotequals /soap:Envelope/soap:Header/wsse:Security/wsse:UsernameToken/wsse:Username	Responder User
	THEN
		CHECK xpathexists //itk:DistributionEnvelope/itk:header/itk:handlingSpecification/*[@key='urn:nhs-itk:ns:201005:interaction']/@key
	ENDIF
ENDIF

# Payload Count ID Crosscheck Validation
#######################################################################################################################################################################################################

CHECK xpathexists //itk:DistributionEnvelope/itk:payloads[@count=count(./itk:payload)]/@count
CHECK xpathexists //itk:DistributionEnvelope/itk:payloads[@count=//itk:DistributionEnvelope/itk:header/itk:manifest/@count]/@count
CHECK xpathmatches //itk:DistributionEnvelope/itk:payloads/itk:payload/@id ^[a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}

ELSE
SET literal $CHECKPOINT DISTRIBUTION ENVELOPE NOT PRESENT
ENDIF
#######################################################################################################################################################################################################
#######################################################################################################################################################################################################
#######################################################################################################################################################################################################

SUBSET profile_interaction_validation
IF xpathexists //itk:DistributionEnvelope
THEN
	CHECK xpathequals //itk:DistributionEnvelope/itk:header/itk:manifest/itk:manifestitem/@profileid $PROFILE
	ANNOTATION "Test: ProfileID is appropriate for validation ruleset being executed"
	#HandlingSpecification Config Specific Checks
	CHECK xpathin //itk:DistributionEnvelope/itk:header/itk:handlingSpecification/*[@key='urn:nhs-itk:ns:201005:interaction']/@value $INTERACTION_1 $INTERACTION_2 $INTERACTION_3 $INTERACTION_4 $INTERACTION_5 $INTERACTION_6 $INTERACTION_7
	ANNOTATION "Test: Interaction is appropriate for validation ruleset being executed"
ENDIF

SUBSET CDA_render_templatelist_display
IF xpathexists //*[local-name()='ClinicalDocument']
THEN
IF xpathnotexists //*[local-name()='nonXMLBody']
THEN
CHECK cdatemplatelist
CHECK cdarenderer
ELSE
CHECK xpathexists //*[local-name()='nonXMLBody']
ANNOTATION "Test: Message contains a nonXMLBody, rendering and template listing steps skipped"
ENDIF
ENDIF

SUBSET CDA_generic_schema_and_schematron
IF xpathexists //itk:DistributionEnvelope
THEN	
	IF xpathexists //*[local-name()='ClinicalDocument']
	THEN
	CHECK xslt /home/riro/TKW-5.0.5/TKW/contrib/Common/cda/Generic_CDA_Document_Schematron.xsl Error
	ANNOTATION "Test: Generic_CDA_Document_Schematron.xsl"
	CHECK cdaconformancexslt /home/riro/TKW-5.0.5/TKW/contrib/Common/cda/CfH_CDA_Document_Schematron.xsl Error
	ANNOTATION "Test: CheckCfH_CDA_Document_Schematron.xsl"
	IF xpathequals //itk:DistributionEnvelope/itk:payloads 1
		THEN
			CHECK schema /home/riro/TKW-5.0.5/TKW/contrib/DMS_Schema/GenericCDA/Schemas/POCD_MT000002UK01.xsd //itk:DistributionEnvelope/itk:payloads/itk:payload[1]/*[1]
			ANNOTATION "Test: Generic CDA Schema POCD_MT000002UK01"
		ELSE
		#Multiple Payload Message - Check only first payload
		CHECK schema /home/riro/TKW-5.0.5/TKW/contrib/DMS_Schema/GenericCDA/Schemas/POCD_MT000002UK01.xsd //itk:DistributionEnvelope/itk:payloads/itk:payload/*[local-name()='ClinicalDocument'][1]
		ANNOTATION "Test: Generic CDA Schema POCD_MT000002UK01"
		ENDIF
	ELSE
	CHECK xpathnotexists //*[local-name()='ClinicalDocument']
	ANNOTATION "MESSAGE DOES NOT CONTAIN CLINICAL DOCUMENT - GENERIC CDA AND SCHEMATRON VALIDATION SKIPPED"
	ENDIF
ENDIF

SUBSET GENERIC_CDA_VALIDATION

IF xpathexists //*[local-name()='ClinicalDocument']
THEN


	# XPATH to return all PatientRole elements
	SET xpath $PatientRole_Template //*[local-name()='ClinicalDocument']//*[local-name()='templateId'][@extension='COCD_TP145201GB02#PatientRole']/..

	# set contents of xpath containing address to $Patient_Address_WS before using Address_Validation_Routine sub-routine then call
	SET literal $Patient_Address_WS //*[local-name()='ClinicalDocument']//*[local-name()='templateId'][@extension='COCD_TP145201GB02#PatientRole']/../*[local-name()='addr']

	# set contents of xpath containing name to $Patient_Name_WS before using Address_Validation_Routine or Patient_Details_Validation_Routine sub-routine then call
	SET literal $Patient_Name_WS //*[local-name()='ClinicalDocument']//*[local-name()='templateId'][@extension='COCD_TP145201GB02#PatientRole']/../*[local-name()='patient']

	####################################
	CHECK sub NHSNumber_root
	####################################
	
ELSE
	CHECK xpathnotexists //*[local-name()='ClinicalDocument']
	ANNOTATION "MESSAGE DOES NOT CONTAIN CLINICAL DOCUMENT - GENERIC CDA AND SCHEMATRON VALIDATION SKIPPED"
ENDIF


SUBSET GEN_SimpleOKResponse
CHECK xpathexists /soap:Envelope/soap:Header/wsa:Action
IF xpathexists /soap:Envelope/soap:Header/wsa:Action
THEN
	CHECK xpathmatches  /soap:Envelope/soap:Header/wsa:Action urn:nhs-itk:services:201005:admitPatient-v1-0Response
ENDIF
CHECK xpathexists /soap:Envelope/soap:Body/itk:SimpleMessageResponse
CHECK sub GEN_soapenvelope
CHECK sub soapResponseMessage

	
SUBSET GEN_transforms
SET literal $CHECKPOINT VALIDATING FILE CONSISTENCY
CHECK xslt /home/riro/TKW-5.0.5/TKW/contrib/Common/xslt/blank_attribute_checker.xslt ERROR
ANNOTATION "WARNING ONLY - Generic test for blank attributes in message XML"
CHECK xslt /home/riro/TKW-5.0.5/TKW/contrib/Common/xslt/IllegalCharacters.xslt ERROR
ANNOTATION "WS-STD-01: Toolkit Messages MUST use UTF-8 encoding. Illegal character check may flag up some valid unicode characters, as it is not an exhaustive check. It will locate the use of non-rendering unicode control characters within the payload, sometimes erroneously introduced."
CHECK xslt /home/riro/TKW-5.0.5/TKW/contrib/Common/xslt/schemaLocation.xslt ERROR


SUBSET dateTimeValidator
CHECK xpathexists $dateTime
ANNOTATION "dateTime value is present"
CHECK xpathmatches $dateTime ^()?[1-9]\d{3,}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(.(\d+))?(Z|((\+|\-)\d{2}(:)?\d{2})?)$
ANNOTATION "Check dateTimestamp follows the rule '-'? yyyy '-' mm '-' dd 'T' hh ':' mm ':' ss ('.' s+)? (zzzzzz)?"

SUBSET GEN_responses_validate_soapEnvelope

IF xpathexists /soap:Envelope
THEN
	IF xpathin /soap:Envelope/soap:Header/wsa:Action http://www.w3.org/2005/08/addressing/fault http://www.w3.org/2005/08/addressing/soap/fault
	THEN
	IF xpathexists //itk:ToolkitErrorInfo
	THEN
	CHECK schema /home/riro/TKW-5.0.5/TKW/contrib/DMS_Schema/ITK_Core/Schemas/ITKMessageTypes-2010-05.xsd  //itk:ToolkitErrorInfo
	ANNOTATION "Test: Check FAULT response against ITKMessageTypes-2010-05.xsd"
	ELSE
	CHECK xpathexists //itk:ToolkitErrorInfo
	ANNOTATION "Test: Fault response returned with no ToolkitErrorInfo block"
	ENDIF
	ELSE
		IF xpathequals //local-name()='SimpleMessageResponse' true
		THEN
			CHECK schema /home/riro/TKW-5.0.5/TKW/contrib/DMS_Schema/ITK_Core/Schemas/ITKMessageTypes-2010-05.xsd
			ANNOTATION "Test: Check response against ITKMessageTypes-2010-05.xsd"
		ENDIF
	ENDIF

SET literal $CHECKPOINT VALIDATING SOAP ENVELOPE FOR RESPONSE MESSAGES

# wsa:MessageID Validation
#######################################################################################################################################################################################################

CHECK xpathexists /soap:Envelope/soap:Header/wsa:MessageID
ANNOTATION "Test: MessageID is present"

	IF xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
	THEN
		CHECK xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-zA-Z_:]*[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
		ANNOTATION "Test: MessageID follows the rule - 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively. And contains some prefix, which is specific to the framework used for development."
	ELSE
		IF xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
		THEN
			CHECK xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
			ANNOTATION "Test: MessageID = __MESSAGEID__ an unsubstituted example file has been validated"
		ELSE
			IF xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
			THEN
			CHECK xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
			ANNOTATION "Test: MessageID is correct format - NOTE: LOWER CASE HEX VALUES HAVE BEEN USED - UPPER CASE (WITHOUT PREFIX)IS RECOMMENDED. WS-ADR-01)"
			ELSE
				IF xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
				THEN
				CHECK xpathequals /soap:Envelope/soap:Header/wsa:MessageID __MESSAGEID__
				ANNOTATION "Test: MessageID = __MESSAGEID__ an unsubstituted example file has been validated"
				ELSE
				CHECK xpathmatches /soap:Envelope/soap:Header/wsa:MessageID [a-z_:]*[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}
				ANNOTATION "Test: MessageID MUST be: 5 hyphen-separated groups of hexadecimal digits having 8, 4, 4, 4, and 12 places respectively with a prefix, which is specific to the development framework NOTE: LOWER CASE HEX VALUES HAVE BEEN USED - UPPER CASE (WITHOUT PREFIX)IS RECOMMENDED. WS-ADR-01)"
				ENDIF
			ENDIF
		ENDIF
	ENDIF

#######################################################################################################################################################################################################
# wsa:Action Validation
#######################################################################################################################################################################################################
	IF xpathexists /soap:Envelope/soap:Header/wsa:Action
	THEN
		CHECK xpathequals /soap:Envelope/soap:Header/wsa:Action $ACTION
		ANNOTATION "Test: Action is appropriate for validation ruleset being executed"
	ELSE
		CHECK xpathexists /soap:Envelope/soap:Header/wsa:Action
		ANNOTATION "Test: Action is present"
	ENDIF

# wsa:To Validation
#######################################################################################################################################################################################################

	IF xpathexists /soap:Envelope/soap:Header/wsa:To
	THEN
		IF xpathnotequals /soap:Envelope/soap:Header/wsa:To __SENDTO__
		THEN
			IF xpathequals /soap:Envelope/soap:Header/wsa:To  http://www.w3.org/2005/08/addressing/anonymous
			THEN
				CHECK xpathequals  /soap:Envelope/soap:Header/wsa:To http://www.w3.org/2005/08/addressing/anonymous
				ANNOTATION "Test: To is set to anonymous for sync responses"
			ELSE
				CHECK xpathnotequals  /soap:Envelope/soap:Header/wsa:To http://www.w3.org/2005/08/addressing/anonymous
				ANNOTATION "Test: To is not set to anonymous ensure this is an async response"
			ENDIF
		ENDIF
	ENDIF

	IF xpathexists /soap:Envelope/soap:Header/wsa:RelatesTo
	THEN
		CHECK xpathmatches /soap:Envelope/soap:Header/wsa:RelatesTo [A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}
	ENDIF
ELSE
SET literal $CHECKPOINT SOAP ENVELOPE NOT PRESENT
ENDIF


#######################################################################################################################################################################################################
#######################################################################################################################################################################################################
#######################################################################################################################################################################################################

