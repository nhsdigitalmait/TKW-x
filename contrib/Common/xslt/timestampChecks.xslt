<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2005/xpath-functions" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:mynamespace="www.itk.com">
	<xsl:output method="html" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">

	<!-- Need to use input files declared soap namespace otherwise the version mismatch ATM test will fail -->
	


	<!--<xsl:variable name="now" select="current-dateTime()"/>-->
	
	<xsl:variable name="created" select="s:dateTime(//*[local-name()='Envelope']/*[local-name()='Header']/*[local-name()='Security']/*[local-name()='Timestamp']/*[local-name()='Created'])"/>
	<xsl:variable name="expires" select="s:dateTime(//*[local-name()='Envelope']/*[local-name()='Header']/*[local-name()='Security']/*[local-name()='Timestamp']/*[local-name()='Expires'])"/>
		
<!--	<xsl:variable name="now_offset" select="timezone-from-dateTime($now)"/>-->
	<xsl:variable name="created_offset" select="timezone-from-dateTime($created)"/>
	<xsl:variable name="expires_offset" select="timezone-from-dateTime($expires)"/>


	<xsl:variable name="now" select="adjust-dateTime-to-timezone(current-dateTime(), $created_offset)"/>

<!--
<xsl:text>Now: </xsl:text>		<xsl:value-of select="$now"></xsl:value-of>
<br></br>
<br></br>
<xsl:text>Now adjusted to message timezone: </xsl:text>		<xsl:value-of select="adjust-dateTime-to-timezone(current-dateTime(), $created_offset)"></xsl:value-of>
<br></br>

<xsl:text>Created: </xsl:text>		<xsl:value-of select="$created"></xsl:value-of>
<br></br>
<xsl:text>Created Offset: </xsl:text>		<xsl:value-of select="$created_offset"></xsl:value-of>
<br></br>

<xsl:text>Expires: </xsl:text>		<xsl:value-of select="$expires"></xsl:value-of>
<br></br>
<xsl:text>Expires Offset: </xsl:text>		<xsl:value-of select="$expires_offset"></xsl:value-of>
<br></br>		
-->



		<!-- Do not do timestamp checks if response is generated by simulator as will fail due to timestamp format --> 
<!--		<xsl:if test="//soap:Envelope/soap:Header/wsse:Security/wsse:UsernameToken/wsse:Username != 'Responder User'">
				<xsl:if test="//soap:Envelope/soap:Header/wsse:Security/wsse:UsernameToken/wsse:Username != 'TKS Server test'">-->
			<xsl:choose>
				<xsl:when test="$expires &gt; $now">
					<xsl:text>Expires time (</xsl:text>
					<xsl:value-of select="$expires"/>
					<xsl:text>) is after now time (</xsl:text>
					<xsl:value-of select="$now"/>
					<xsl:text>) </xsl:text>
				</xsl:when>
				<xsl:otherwise>
					<xsl:text>ERROR: </xsl:text>
					<xsl:text>Expires time (</xsl:text>
					<xsl:value-of select="$expires"/>
					<xsl:text>) is before now time (</xsl:text>
					<xsl:value-of select="$now"/>
					<xsl:text>) </xsl:text>
				</xsl:otherwise>
			</xsl:choose>
	
			<xsl:choose>
				<xsl:when test="$created &lt; $now">
					<xsl:text>Created time (</xsl:text>
					<xsl:value-of select="$created"/>
					<xsl:text>) is before now time (</xsl:text>
					<xsl:value-of select="$now"/>
					<xsl:text>) </xsl:text>
				</xsl:when>
				<xsl:otherwise>
					<xsl:text>ERROR: </xsl:text>
					<xsl:text>Created time (</xsl:text>
					<xsl:value-of select="$created"/>
					<xsl:text>) is after now time (</xsl:text>
					<xsl:value-of select="$now"/>
					<xsl:text>) </xsl:text>
				</xsl:otherwise>
			</xsl:choose>
	
			<xsl:choose>
				<xsl:when test="$created &lt; $expires">
					<xsl:text>Created time (</xsl:text>
					<xsl:value-of select="$created"/>
					<xsl:text>) is before Expires time (</xsl:text>
					<xsl:value-of select="$expires"/>
					<xsl:text>) </xsl:text>
				</xsl:when>
				<xsl:otherwise>
					<xsl:text>ERROR: </xsl:text>
					<xsl:text>Created time (</xsl:text>
					<xsl:value-of select="$created"/>
					<xsl:text>) is after Expires time (</xsl:text>
					<xsl:value-of select="$expires"/>
					<xsl:text>) </xsl:text>
				</xsl:otherwise>
			</xsl:choose>
	
<!--				</xsl:if>
		</xsl:if>-->
	</xsl:template>



</xsl:stylesheet>
